<% days = ["日", "月", "火", "水", "木", "金", "土"] %>
    <% if @cash_result.empty? %>
    <p class="caution-text">指定した日付には終着がありません。</p>
    <% else %>
    <h1>
      <% if @cash_result.group(:base).length > 1 %>
      全拠点
      <% else %>
      <%= @cash_result.first.user.base %>
      <% end %>
      （稼働訪問員<%= @cash_result.group(:user_id).length %>人）
      表示範囲：
      <%= @cash_result.minimum(:date) %>（<%= days[@cash_result.minimum(:date).wday] %>）〜<%= @cash_result.maximum(:date) %>（<%= days[@cash_result.maximum(:date).wday] %>）
    </h1> 
  <table class="base-tb">
    <tr>
      <th class="sticky" rowspan="2" >名前</th>
      <th class="search-th" rowspan="2" >担当商材</th>
      <th class="search-th" rowspan="2" >予定シフト</th>
      <th class="search-th" rowspan="2" >消化シフト</th>
      <th class="search-th" colspan="3" >営業予想</th>
      <th class="search-th" colspan="3" >案件ベース</th>
      <th class="search-th" colspan="4">基準値</th>
      <th class="search-th" colspan="12">商材別獲得数</th>
    </tr>
    <tr>
      <th class="search-th">平均売上</th>
      <th class="search-th" >現状売上</th>
      <th class="search-th" >見込終着</th>
      <th class="search-th">平均売上</th>
      <th class="search-th" >現状売上</th>
      <th class="search-th" >見込終着</th>
      <th class="search-th">訪問</th>
      <th class="search-th">対面</th>
      <th class="search-th">フル</th>
      <th class="search-th">獲得</th>
      <th class="search-th">dメル（新規）</th>
      <th class="search-th">dメル（初回決済）</th>
      <th class="search-th">dメル（2回目決済）</th>
      <th class="search-th">aupay（新規）</th>
      <th class="search-th">aupay（決済）</th>
      <th class="search-th">PayPay</th>
      <th class="search-th">楽天ペイ</th>
      <th class="search-th">少額短期保険</th>
      <th class="search-th">フェムト（新規）</th>
      <th class="search-th">フェムト（設置）</th>
      <th class="search-th">フェムト（他者設置）</th>
      <th class="search-th">フェムト（設置依頼）</th>
    </tr>
    <tr></tr>
    <%# 合計値 %>
      <% base_shift = 0 %>
      <% 
        base_shift_digestion = 
          @cash_result.where.not(shift: "休み")
          .where.not(shift: "内勤")
          .where.not(shift: "帯同")
          .where.not(shift: "欠勤").length  
      %>
      <% base_ave = 0 %>
      <% base_sum = 0 %>
      <% base_dmer = 0 %>
      <% base_dmer_slmt = 0 %>
      <% base_aupay = 0 %>
      <% base_aupay_slmt = 0 %>
      <% base_paypay = 0 %>
      <% base_rakuten_pay = 0 %>
      <% base_st_insurace = 0 %>
      <% base_exp_ave = 0 %>
      <% base_exp_sum = 0 %>
      <% base_exp_fin = 0 %>
    <% @cash_result.group(:user_id).each do |r| %>
    <%# 変数 %>
      <% r_user = @cash_result.where(user_id: r.user.id) %>
      <%# シフト %>
        <% 
          new_shift = r_user.where(shift: "キャッシュレス新規")
          .or(r_user.where(shift: "フェムト新規"))
          .or(r_user.where(shift: "サミット")).length
        %>
        <%
          shifts = Shift.where(user_id: r.user_id)
          .where(start_time: @cash_result.minimum(:date)..@results.minimum(:date).beginning_of_month.since(1.month).since(24.days))
          .where.not(shift: "休み")
          .where.not(shift: "内勤")
          .where.not(shift: "帯同")
          .where.not(shift: "欠勤").length
        %>
        <% base_shift += shifts %><%# 予定シフトの合計を取得 %>
        <% 
          shift_digestion = r_user
          .where.not(shift: "休み")
          .where.not(shift: "内勤")
          .where.not(shift: "帯同")
          .where.not(shift: "欠勤").length 
        %>
      <%# 基準値 %>
        <% sum_visit = r_user.sum("first_visit + latter_visit").to_f %>
        <% sum_interview = r_user.sum("first_interview + latter_interview").to_f %>
        <% sum_full_talk = r_user.sum("first_full_talk + latter_full_talk").to_f %>
        <% sum_get = r_user.sum("first_get + latter_get").to_f %>
      <%# 営業予想売上 %>
        <% exp_sum = @cash_result.where(user_id: r.user_id).sum(:profit) %>
        <% exp_ave = exp_sum / @cash_result.where(user_id: r.user_id).length rescue "NaN" %>
        <% exp_fin = exp_ave * shifts rescue "NaN" %>
        <% base_exp_sum = @cash_result.sum(:profit) %>
        <% base_exp_ave = base_exp_sum / base_shift_digestion rescue "NaN" %>
        <% base_exp_fin = base_exp_ave * base_shift %>
      <%# 各商材変数（評価売） %>
        <%# dメル（新規） %>
          <% dmer_user = Dmer.includes(:store_prop).where(user_id: r.user_id) %>
          <% 
            dmer_uq = 
              this_period(dmer_user,@cash_result)
              .where(store_prop: {head_store: nil})
          %>
          <% 
            dmer_db = 
              share_period(dmer_user,@cash_result)
              .where.not(store_prop: {head_store: nil})
              .where.not(industry_status: "×")
              .where.not(industry_status: "NG")
              .where(status: "審査OK")
          %>
          <% dmer_def =  dmer_def(dmer_uq,@cash_result) %>
          <% 
            dmer_inc = 
              judge_inc(dmer_user,@cash_result)
              .where(store_prop: {head_store: nil})
              .where.not(industry_status: "NG")
              .where.not(industry_status: "×") 
          %>
          <% dmer_dec = judge_dec(dmer_user,@cash_result)  %>
          <%# 合計 %>
          <% 
            dmer_valuations =
              dmer_uq.sum(:valuation_new) - 
              dmer_def.sum(:valuation_new) + 
              dmer_inc.sum(:valuation_new) +
              dmer_db.sum(:valuation_new) -
              dmer_dec.sum(:valuation_new)
          %>
          <% 
            dmer_len = 
              dmer_uq.length - dmer_def.length + 
              dmer_inc.length + dmer_db.length -
              dmer_dec.length
          %>
        <%# dメル（決済） %>
          <% dmer_slmter = Dmer.where(settlementer_id: r.user_id) %>
          <% 
            dmer_slmt = 
              slmt_this_period(dmer_slmter ,@cash_result)
              .where.not(industry_status: "×")
              .where.not(industry_status: "NG")
              .or(slmt_this_period(dmer_slmter, @cash_result)
              .where(industry_status: nil))
          %>
          <% dmer_slmt_valuations = dmer_slmt.sum(:valuation_settlement) %>
          <% dmer_slmt_len = dmer_slmt.length %>
          <% dmer_slmt2nd = slmt_second(dmer_slmter,@cash_result) %>
          <% dmer_slmt2nd_valuations = dmer_slmt2nd.sum(:valuation_second_settlement) %>
          <% dmer_slmt2nd_len = dmer_slmt2nd.length %>
        <%# aupay（新規） %>
          <% aupay_user = Aupay.includes(:store_prop).where(user_id: r.user_id) %>
          <% 
            aupay_uq = 
              this_period(aupay_user,@cash_result)
              .where(store_prop: {head_store: nil})
          %>
          <% 
            aupay_db = 
              result_period(aupay_user,@cash_result)
              .where.not(store_prop: {head_store: nil})
              .where(status: "審査通過")
          %>
          <% aupay_def =  aupay_def(aupay_uq,@cash_result) %>
          <% aupay_inc = judge_inc(aupay_user,@cash_result)  %>
          <% aupay_judge_dec = judge_dec(aupay_user,@cash_result)  %>
          <%# 合計 %>
          <% 
            aupay_valuations =
              aupay_uq.sum(:valuation_new) - 
              aupay_def.sum(:valuation_new) + 
              aupay_inc.sum(:valuation_new) +
              aupay_db.sum(:valuation_new) -
              aupay_judge_dec.sum(:valuation_new)
          %>
          <% 
            aupay_len = 
              aupay_uq.length - aupay_def.length + 
              aupay_inc.length + aupay_db.length -
              aupay_judge_dec.length
          %>
        <%# aupay（決済） %>
          <% aupay_slmt_user = Aupay.where(settlementer_id: r.user_id) %>
          <% aupay_slmt = slmt_this_period(aupay_slmt_user ,@cash_result) %>
          <% aupay_slmt_valuations = aupay_slmt.sum(:valuation_settlement) %>
          <% aupay_slmt_len = aupay_slmt.length %>
        <%# PayPay %>
          <% paypay_user = Paypay.where(user_id: r.user_id) %>
          <% paypay_data = this_period(paypay_user ,@cash_result) %>
          <% paypay_result = result_period(paypay_user ,@cash_result) %>
          <% paypay_valuations = paypay_result.sum(:valuation) %>
          <% paypay_len = paypay_data.length %>
          <% paypay_r_len = paypay_result.length %>
        <%# 楽天ペイ %>
          <% rakuten_pay_user = RakutenPay.includes(:store_prop).where(user_id: r.user_id) %>
          <% 
            rakuten_pay_uq = 
              this_period(rakuten_pay_user,@cash_result)
          %>
          <% 
            rakuten_pay_dec = 
              rakuten_pay_uq.where.not(deficiency: nil)
              .where.not(share: @cash_result.minimum(:date)..@cash_result.maximum(:date))
          %>

          <% 
            rakuten_pay_def =  
              rakuten_pay_uq.where(status: "自社不備")
              .or(rakuten_pay_uq.where(status: "自社NG")) %>
          <% rakuten_pay_inc = rakuten_inc(rakuten_pay_user,@cash_result)  %>
          <%# 合計 %>
            <% 
              rakuten_pay_valuations =
                rakuten_pay_uq.sum(:valuation) - 
                rakuten_pay_def.sum(:valuation) + 
                rakuten_pay_inc.sum(:valuation) -
                rakuten_pay_dec.sum(:valuation)
            %>
            <% 
              rakuten_pay_len = 
                rakuten_pay_uq.length - 
                rakuten_pay_def.length + 
                rakuten_pay_inc.length -
                rakuten_pay_dec.length
            %>
        <%# 楽天ペイインセン（40件で5万, 50件で10万） %>
          <% rakuten_bonus = 0 %>
          <% if @cash_result.minimum(:date).day == 1 %>
            <% if rakuten_pay_len >= 50 %>
              <% rakuten_bonus = 100000 %>
            <% elsif rakuten_pay_len >= 40  %>
              <% rakuten_bonus = 50000 %>
            <% else %>
              <% rakuten_bonus = 0 %>
            <% end %>
          <% elsif @cash_result.minimum(:date).day == 26 %>
            <% if rakuten_pay_len >= 50 %>
              <% rakuten_bonus = 100000 %>
            <% elsif rakuten_pay_len >= 40  %>
              <% rakuten_bonus = 50000 %>
            <% else %>
              <% rakuten_bonus = 0 %>
            <% end %>
          <% end %>
        <%# 少額短期保険 %>
          <% st_insurance_user = StInsurance.includes(:store_prop).where(user_id: r.user_id) %>
          <% st_insurance_data = this_period(st_insurance_user,@cash_result) %>
          <% st_insurance_valuations = st_insurance_data.sum(:valuation) %>
          <% st_insurance_len = st_insurance_data.length %>
        <%# 楽天フェムト（新規） %>
        <%# 楽天フェムト（設置） %>
        <%# 累計 %>
          <% 
            sum_valuations = 
              dmer_valuations +
              dmer_slmt_valuations +
              dmer_slmt2nd_valuations +
              aupay_valuations + 
              aupay_slmt_valuations +
              paypay_valuations +
              rakuten_pay_valuations + 
              st_insurance_valuations +
              rakuten_bonus
          %>
          <% ave_valuations = sum_valuations / shift_digestion rescue "NaN" %>
          <% base_dmer += dmer_len %>
          <% base_dmer_slmt += dmer_slmt_len %>
          <% base_aupay += aupay_len %>
          <% base_aupay_slmt += aupay_slmt_len %>
          <% base_paypay += paypay_r_len %>
          <% base_rakuten_pay += rakuten_pay_len %>
          <% base_st_insurace += st_insurance_len %>
          <% base_sum += sum_valuations %>
    <tr>
      <th class="sticky"><%= r.user.name %></th>
      <td ><%= r.user.base_sub  %></td>
      <td ><%= shifts %></td>
      <td ><%= shift_digestion %></td>
      <%# 売上 %>
      <td ><%= exp_ave.to_s(:delimited) %></td>
      <td ><%= exp_sum.to_s(:delimited) %></td>
      <td ><%= exp_fin.to_s(:delimited) %></td>
      <td ><%= ave_valuations.to_s(:delimited) rescue "NaN" %></td>
      <td ><%= sum_valuations.to_s(:delimited) rescue "NaN" %></td>
      <td ><%= (ave_valuations * shifts).to_s(:delimited) rescue "NaN" %></td>
      <%# 基準値 %>
      <td><%= (sum_visit / new_shift).round(1) rescue "NaN" %></td>
      <td><%= (sum_interview / new_shift).round(1) rescue "NaN" %></td>
      <td><%= (sum_full_talk / new_shift).round(1) rescue "NaN" %></td>
      <td><%= (sum_get / new_shift).round(1) rescue "NaN" %></td>
      <%# 獲得数 %>
      <td ><%= dmer_len %></td>
      <td ><%= dmer_slmt_len %></td>
      <td ><%= dmer_slmt2nd_len %></td>
      <td ><%= aupay_len %></td>
      <td ><%= aupay_slmt_len %></td>
      <td ><%= paypay_r_len %></td>
      <td ><%= rakuten_pay_len %></td>
      <td ><%= st_insurance_len %></td>
      <td ><%=  %></td>
      <td ><%=  %></td>
      <td ><%=  %></td>
      <td ><%=  %></td>
    </tr>
      <% end %>
    <tr>
        <th class="sticky">全体</th>
        <td ></td>
        <td><%= base_shift %></td>
        <td><%= base_shift_digestion %></td>
        <td><%= base_exp_ave.to_s(:delimited) rescue "NaN" %></td>
        <td><%= base_exp_sum.to_s(:delimited) rescue "NaN" %></td>
        <td><%= base_exp_fin.to_s(:delimited) rescue "NaN" %></td>
        <% base_ave = (base_sum / base_shift_digestion) %>
        <td><%= base_ave.to_s(:delimited) rescue "NaN" %></td>
        <td><%= base_sum.to_s(:delimited) rescue "NaN" %></td>
        <td><%= (base_ave * base_shift).round().to_s(:delimited) %></td>
        <td><%= @cash_result.average("first_visit + latter_visit").round(1) rescue "NaN" %></td>
        <td><%= @cash_result.average("first_interview + latter_interview").round(1) rescue "NaN" %></td>
        <td><%= @cash_result.average("first_full_talk + latter_full_talk").round(1) rescue "NaN" %></td>
        <td><%= @cash_result.average("first_get + latter_get").round(1) rescue "NaN" %></td>
        <td><%= base_dmer %></td>
        <td><%= base_dmer_slmt %></td>
        <td><%= base_aupay %></td>
        <td><%= base_aupay_slmt %></td>
        <td><%= base_paypay %></td>
        <td><%= base_rakuten_pay %></td>
        <td><%= base_st_insurace %></td>
        <td><%=  %></td>
        <td><%=  %></td>
        <td><%=  %></td>
        <td><%=  %></td>
        <td><%=  %></td>
    </tr>
  </table>
  <% end %>